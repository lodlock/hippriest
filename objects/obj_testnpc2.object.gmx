<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_npc_down</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_parent_npc</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rightSprite = spr_npc_right;//Set right idle sprite
upSprite = spr_npc_up;//Set up idle sprite
leftSprite = spr_npc_left; //Set left idle sprite
downSprite = spr_npc_down; //Set down idle sprite
path = path_add(); //creates an empty path for pathfinding
turnPathOn = false; //turn paths on/off
NoTurnNPC = false; //Set TRUE and the NPC will not turn to face player upon triggering
xGoal = 530; //path destination x position
yGoal = 240; //path destination y position








/*******************************************************
                     DIALOGUE
*******************************************************/
dialogueOn = true; //Turn the dialogue on upon interaction
dialogueCount = 0; //default value. Please leave.
dialogueDone = false; //is true when dialogue has finished and obj_dialogue has been destroyed

//Ensures that paths still work even when dialogue is not initiated first
if dialogueOn = false {
    dialogueDone = true;
}

//Enter Dialogue Here as an array eg... dialogue[0] = ... , dialogue[1] = ...
dialogue[0] = "Hey Rob, just wanted to let you know that you are a twat.";
dialogue[1] = "Dota is shit.";
dialogue[2] = "Game of Thrones and Stargate are dope as fuck.";
dialogue[3] = "So please eat a shit.";

        


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x == xGoal &amp;&amp; y == yGoal) {
    view_visible[1] = false;
    view_visible[0] = true;
    instance_activate_object(obj_input);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerSpawnX = other.playerSpawnX;
playerSpawnY = other.playerSpawnY;

view_visible[1] = false;
view_visible[0] = true;
instance_activate_object(obj_input);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Triggered NPC events




//Determines if the npc is within the interaction range (5px) of the player
if distance_to_object(obj_player) &lt; 5 {





    //Turns the NPC to face the player, npc sprites must be set in the create event
    if NoTurnNPC = false {

       script_execute(turnNPC);
    }
    
    
    
    
    
    
    //Turns on the Dialogue
    if dialogueOn = true {
        
        instance_deactivate_object(obj_input); //deactivates movement controls of player
        dialogueNumber = array_length_1d(dialogue); //number of dialogue textboxes need to be created
        var dialogueX = view_xview[0] + 10; //x position of the textbox relative to the view
        var dialogueY = view_yview[0] + 194; //y position of the textbox relative to the view
        
        //if the number of times the textbox has been drawn equals the number of textboxes needed
        //the textbox is destroyed and other variables set to new states - if the number is lower, it continues to draw the next dialogue textbox
        if (dialogueCount &gt;= dialogueNumber) {
            with(obj_dialogue) {
                instance_destroy();
            }
            
                dialogueDone = true; //this tells the other functions of NPC that he is done talking and can resume doing other things (like moving somewhere)
                dialogueCount = 0; //resets the dialogueCount to 0 in the case that there is a need for further dialogue
                dialogueOn = false; //turns the dialogue off
                
                //if there is no npc path after the dialogue - the players controls are reactivated otherwise it will be reactivated after the npc path has completed
                if turnPathOn = false {
                    instance_activate_object(obj_input); //activated players controls
                }
        }
        
        else {
            drawDialogue(dialogue[dialogueCount], 0.5, dialogueX, dialogueY); //draws the next dialog textbox
            dialogueCount += 1; //increases the dialogue count by 1 - the number of times the textbox has been drawn
        }      
        
    }
    
    
    
    
    
    
    
    
    //Turns the path on
    if turnPathOn == true {
        
        //checks that the dialogue is done and then triggers    
        if dialogueDone == true {
        

            //the npc uses the grid set out of the room to calculate a path around walls and player to the destination
            with(self) {
            
                //adds where the player is to the no go zone on the grid so the npc does not collide with him
                mp_grid_add_instances(global.grid, obj_player, false);
                
                //checks if there is a clear path available between the npc and the destination goal - not allowing diaganols
                if mp_grid_path(global.grid, path, x, y, xGoal, yGoal, 0) {
                    path_set_kind(path, 0); //sets the path to be linear
                    
                    //change the view to follow the npc along it's path
                    view_visible[1] = true;
                    
                    
                    path_start(path, 1, path_action_stop, 0); //starts the path
                }
                
                //if there is no path available between the destination and the npc
                else if !mp_grid_path(global.grid, path, x, y, xGoal, yGoal, 0) {
                    instance_activate_object(obj_input); //activated players controls
                    view_visible[0] = true; //change view to player view
                    dialogueOn = true; //dialogue is enabled
                    dialogueDone = false; //dialogue done is set to false so that it will run through dialogue again
                    
                    //MAYBE ADD FUNCTIONALITY TO AUTOMATICALLY MOVE THE PLAYER OUT OF THE WAY
                    
                    
                }
            }
        }
    }
    

    
    
    
          
          
          
          
          
          
          
          //ADD EVENT HERE
    
    
    }
   
    
     
 


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

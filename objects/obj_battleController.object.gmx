<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MOVE THIS global initialization
//*****************************TESTING CODE REMOVE*************
global.healthArray[0] = 70;
global.healthArray[1] = 70;
global.healthArray[2] = 70;
global.healthArray[3] = 70;

global.maxHealth = 70;

global.characterArray[0] = obj_battleAxel;
global.characterArray[1] = obj_battleLorry;
global.characterArray[2] = obj_battleRob;
global.characterArray[3] = obj_battleJimi;

global.axelInventory[0] = scr_basicArmor;
global.axelInventory[1] = scr_basicWeapon;
global.axelInventory[2] = scr_basicMagic;

global.lorryInventory[0] = scr_basicArmor;
global.lorryInventory[1] = scr_basicWeapon;
global.lorryInventory[2] = scr_basicMagic;

global.robInventory[0] = scr_basicArmor;
global.robInventory[1] = scr_basicWeapon;
global.robInventory[2] = scr_basicMagic;

global.jimiInventory[0] = scr_basicArmor;
global.jimiInventory[1] = scr_basicWeapon;
global.jimiInventory[2] = scr_basicMagic;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initializing variables

global.view = "battle";

// related to the monster selector:
currentIndex = 0;
noOfMonsters = instance_number(obj_parent_battleMonsters);
currentMonster = instance_find(obj_parent_battleMonsters, currentIndex);
currentMonsterSprite = currentMonster.sprite_index;
selectingMonster = false;
// actionSelector tracks whether the player is currently
// attacking or casting magic
actionSelector = "none";

// related to the character selector:
charSelect = obj_battleRob;




// allocate equipment values to all characters:

for (var i = 0; i &lt; 3; i++) {
    script_execute(global.axelInventory[i], obj_battleAxel);
}

for (var j = 0; j &lt; 3; j++) {
    script_execute(global.lorryInventory[j], obj_battleLorry);
}

for (var k = 0; k &lt; 3; k++) {
    script_execute(global.robInventory[k], obj_battleRob);
}

for (var l = 0; l &lt; 3; l++) {
    script_execute(global.jimiInventory[l], obj_battleJimi);
}
    
randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>noOfMonsters = instance_number(obj_parent_battleMonsters);
currentMonster = instance_find(obj_parent_battleMonsters, currentIndex);
currentMonsterSprite = currentMonster.sprite_index;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw UI
// draw health bars for players:
var x1 = 373;
var barHeight = 5;
// axel:
script_execute(scr_drawBar, x1, global.healthArray[0], 170, 170 + barHeight, c_red, 100, global.maxHealth);
//lorry:
script_execute(scr_drawBar, x1, global.healthArray[1], 195, 195 + barHeight, c_red, 100, global.maxHealth);
//rob:
script_execute(scr_drawBar, x1, global.healthArray[2], 220, 220 + barHeight, c_red, 100, global.maxHealth);
//jimi:
script_execute(scr_drawBar, x1, global.healthArray[3], 245, 245 + barHeight, c_red, 100, global.maxHealth);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (selectingMonster = true) {    
    if (currentIndex == noOfMonsters - 1) {
        currentIndex = 0;
    }
    else {
        currentIndex = currentIndex + 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (selectingMonster = true) {
    if (currentIndex != 0) {
        currentIndex = currentIndex - 1;
    }
    else {
        currentIndex = noOfMonsters - 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Use Action:

// if currently selecting a monster to interact with:
if (selectingMonster = true) {
    currentMonster.critted = false;
    // if attacking
    if (actionSelector == "attack") {
        // reset cooldown
        charSelect.cooldown = charSelect.cooldownAttack;
        charSelect.maxCooldown = charSelect.cooldownAttack;
        // change animation:
        charSelect.sprite_index = charSelect.attackSprite;
        // calculate damage :
        // if physical:
        if (charSelect.physicalAttack &gt; 0) {
            // calculate and deal damage
            script_execute(scr_calculateDamage,"physical", "monster", charSelect.physicalAttack);
        }
        // create slash anim
        instance_create(currentMonster.x + (sprite_get_width(currentMonster.sprite_index) * 0.25), currentMonster.y + 10, obj_battleSlash);
        // set monster alarm to draw damage:
        currentMonster.alarm[0] = 50;
        currentMonster.alarm[2] = 50;
   }
   
   if (actionSelector == "magic") {
        // reset cooldown
        charSelect.cooldown = charSelect.cooldownMagic;
        charSelect.maxCooldown = charSelect.cooldownMagic;
        // Change sprite
        // calculate damage :
        if (charSelect.fireMagic &gt; 0) {
            // fire damage inflicted
            currentMonster.onFire = true;
            currentMonster.totalFire = charSelect.fireMagic;
            currentMonster.currentFire = 0;
            currentMonster.alarm[1] = 1;
        }
   }
   
   // unselect monster
    selectingMonster = false;
    // revert back to character select
    instance_create(0, 0, obj_charSelect);
    with (obj_monsterSelector){
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
